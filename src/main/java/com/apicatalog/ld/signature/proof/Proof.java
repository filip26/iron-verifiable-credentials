package com.apicatalog.ld.signature.proof;

import java.net.URI;
import java.util.Collection;
import java.util.Map;

import com.apicatalog.ld.DocumentError;
import com.apicatalog.ld.signature.CryptoSuite;
import com.apicatalog.ld.signature.SignatureSuite;
import com.apicatalog.ld.signature.method.VerificationMethod;
import com.apicatalog.vc.integrity.DataIntegrityProof;

import jakarta.json.JsonObject;

/**
 * Represents generic VC/VP proof.
 *
 * see {@link DataIntegrityProof}
 *
 */
public interface Proof {

    /**
     * The proof type used.
     *
     * For example, an Ed25519Signature2020 type indicates that the proof includes a
     * digital signature produced by an ed25519 cryptographic key.
     *
     * @return the proof type
     */
    URI getType();

    /**
     * A set of parameters required to independently verify the proof, such as an
     * identifier for a public/private key pair that would be used in the proof.
     * Mandatory
     *
     * @return a collection of {@link VerificationMethod} to verify the proof signature
     */
    Collection<VerificationMethod> getMethod();

    /**
     * One of any number of valid representations of proof value generated by the
     * Proof Algorithm.
     *
     * @return the proof value as byte array
     */
    byte[] getValue();
        
    void setValue(byte[] value);
        
    URI id();
    URI previousProof();

    CryptoSuite getCryptoSuite();
    
    SignatureSuite getSignatureSuite();

    /**
     * Returns JSON-LD expanded form of the proof. 
     *  
     * @return the proof in an expanded JSON-LD form
     */
    JsonObject toJsonLd();

    void validate(Map<String, Object> params) throws DocumentError;

}
