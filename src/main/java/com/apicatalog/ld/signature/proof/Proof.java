package com.apicatalog.ld.signature.proof;

import java.net.URI;

import com.apicatalog.ld.DocumentError;
import com.apicatalog.ld.signature.method.VerificationMethod;
import com.apicatalog.vc.integrity.DataIntegrityProof;

/**
 * Represents generic VC/VP proof. 
 *
 * see {@link DataIntegrityProof}
 *
 */
public interface Proof  {
    
    /**
     * The proof type used.
     *
     * For example, an Ed25519Signature2020 type indicates that the proof includes
     * a digital signature produced by an ed25519 cryptographic key.
     *
     * @return the proof type
     */
    URI getType();

    /**
     * A set of parameters required to independently verify the proof,
     * such as an identifier for a public/private key pair that would be used in the proof. Mandatory
     *
     * @return {@link VerificationMethod} to verify the proof signature
     */
    VerificationMethod getMethod();

    /**
     * One of any number of valid representations of proof value generated by the Proof Algorithm.
     *
     * @return the proof value as byte array
     */
    byte[] getValue();
    
    /**
     * Validates the proof data integrity. Does data integrity checks unrelated to a computed signature.
     * e.g. mandatory fields, values (created < now) e.g.
     * 
     * @throws DocumentError
     */
//FIXME ?!?!?!    void validate() throws DocumentError;

}
